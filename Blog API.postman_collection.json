{
	"info": {
		"_postman_id": "0fade0ef-c7fd-440c-a650-cf85c4e6f84a",
		"name": "Blog API",
		"description": "Before starting you must set the **baseUrl** valiable.\n\n- `baseUrl`: The root URL for the API.\n    \n\nExample: [http://127.0.0.1:8000](http://127.0.0.1:8000EndFragment)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41964636"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "**Purpose:**\n\nRegisters a new user by sending a JSON payload containing name, email, and password. On successful registration, returns a token in the response.\n\n**Request Body Parameters:**\n\n- `name`(`string`): The user\\`s name.\n    \n- `email`(`string`): The user\\`s email. Must be a unique.\n    \n- `password` (`string`): The password. At least 8 characters.\n    \n\n**Example Body:**\n\n``` json\n{\n  \"name\": \"example\",\n  \"email\": \"user@gmail.com\",\n  \"password\": \"12345678\"\n}\n\n ```\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n  \"token\": \"1|654b53a0558049eaa5f4fcb8ccde952d22020e716d8496c5de656aa53351797f\"\n}\n\n ```\n\n**Note:** All fields are required. Make sure to provide valid values for each parameter."
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"logout"
							]
						},
						"description": "**Purpose:**\n\nLogs out the current user by invalidating authentication token. This endpoint returns a JSON message confirming the successful logout. Use this endpoint to prevent further access until they log in again. No request body is required.\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n  \"message\" => \"Successfully logged out\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "**Purpose:**\n\nThis endpoint is used for user login. Send the user's email and password in the request body as JSON. On successful authentication, a token is returned in the response.\n\n**Request Body Parameters:**\n\n- `email`(`string`): The user\\`s email.\n    \n- `password` (`string`): The password.\n    \n\n**Example Body:**\n\n``` json\n{\n  \"email\": \"user@gmail.com\",\n  \"password\": \"12345678\"\n}\n\n ```\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n  \"token\": \"1|654b53a0558049eaa5f4fcb8ccde952d22020e716d8496c5de656aa53351797f\"\n}\n\n ```\n\n**Note:** All fields are required. Make sure to provide valid values for each parameter."
					},
					"response": []
				}
			],
			"description": "Before starting you should set the following **variables**:\n\n- `userEmail:` The user\\`s email.\n    \n- `userPassword`: The password. At least 8 characters."
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "get all posts",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						},
						"description": "**Purpose:**\n\nRetrieves a list of all posts from the API. Use this endpoint to fetch all available blog posts.\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n  \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Mr.\",\n            \"content\": \"Corrupti mollitia inventore modi sed dicta repudiandae. Dolore voluptatum hic dolores quam. Numquam voluptas adipisci distinctio facere. Fuga ut aut dignissimos impedit quas ut.\",\n            \"creator\": {\n                \"id\": 1,\n                \"name\": \"Test User\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"natus\"\n            },\n            \"created_at\": \"2025-10-27T10:50:00.000000Z\"\n        },\n        {...},\n    ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "create post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.collectionVariables.set(\"postId\", jsonData.data.id);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{postTitle}}\",\r\n    \"content\": \"{{postContent}}\",\r\n    \"category_id\": {{postCategoryId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						},
						"description": "**Purpose:**\n\nCreates a new blog post by providing a title, content, and category ID. Use this endpoint to add a post to the blog with the specified details.\n\n**Request Body Parameters:**\n\n- `title` (`string`): The new title for the post.\n    \n- `content` (`string`): The updated content of the post.\n    \n- `category_id` (`integer`): The ID of the category to which the post should belong.\n    \n\n**Example Body:**\n\n``` json\n{\n  \"title\": \"post title\",\n  \"content\": \"post content\",\n  \"category_id\": 2\n}\n\n ```\n\n**Example Response:**\n\nSuccess Response (201 Created).\n\n``` json\n{\n    \"data\": {\n        \"id\": 32,\n        \"title\": \"post title\",\n        \"content\": \"post content\",\n        \"creator\": {\n            \"id\": 7,\n            \"name\": \"Vada.Turner\"\n        },\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"quis\"\n        },\n        \"created_at\": \"2025-10-27T13:15:39.000000Z\"\n    }\n}\n\n ```\n\n**Note:** All fields are required. Make sure to provide valid values for each parameter."
					},
					"response": []
				},
				{
					"name": "get post by id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}"
							]
						},
						"description": "**Purpose:**\n\nRetrieves a single blog post by its unique ID. Provide the post ID as a path variable to get the details of the specified post.\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n  \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"Mr.\",\n            \"content\": \"Corrupti mollitia inventore modi sed dicta repudiandae. Dolore voluptatum hic dolores quam. Numquam voluptas adipisci distinctio facere. Fuga ut aut dignissimos impedit quas ut.\",\n            \"creator\": {\n                \"id\": 1,\n                \"name\": \"Test User\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"natus\"\n            },\n            \"created_at\": \"2025-10-27T10:50:00.000000Z\"\n        },\n        {...},\n    ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "update post",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{newPostTitle}}\",\r\n    \"content\": \"{{newPostContent}}\",\r\n    \"category_id\": {{postCategoryId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}"
							]
						},
						"description": "**Purpose:**\n\nUpdates an existing blog post with new data such as title, content, or category. The request will update the specified post and return the updated post data in the response.\n\n**Request Body Parameters:**\n\n- `title` (`string`): The new title for the post.\n    \n- `content` (`string`): The updated content of the post.\n    \n- `category_id` (`integer`): The ID of the category to which the post should belong.\n    \n\n**Example Body:**\n\n``` json\n{\n  \"title\": \"New Post Title\",\n  \"content\": \"Updated content for the post.\",\n  \"category_id\": 2\n}\n\n ```\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n    \"data\": {\n        \"id\": 32,\n        \"title\": \"new post title\",\n        \"content\": \"updated content for the post.\",\n        \"creator\": {\n            \"id\": 7,\n            \"name\": \"Vada.Turner\"\n        },\n        \"category\": {\n            \"id\": 2,\n            \"name\": \"quis\"\n        },\n        \"created_at\": \"2025-10-27T13:15:39.000000Z\"\n    }\n}\n\n ```\n\n**Note:** All fields are required. Make sure to provide valid values for each parameter."
					},
					"response": []
				}
			],
			"description": "Before starting you should set the following **variables**:\n\n- `postTitle`: The post's title.\n    \n- `postContent`: The post's body (content).\n    \n- `postCategoryId` : The post's category id.\n    \n\nFor updating:\n\n- `newPostTitle`: The post's new title.\n    \n- `newPostContent`: The post's new body (content).\n    \n- `newPostCategoryId` : The post's new category id."
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "create comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.collectionVariables.set(\"commentId\", jsonData.data.id);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{commentContent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}",
								"comments"
							]
						},
						"description": "**Purpose:**\n\nCreates a new comment for post by providing content. Use this endpoint to add a comment for specific post by providing the post ID as a path variable.\n\n**Request Body Parameters:**\n\n- `content` (`string`): The comment content.\n    \n\n**Example Body:**\n\n``` json\n{\n  \"content\": \"awesome!\"\n}\n\n ```\n\n**Example Response:**\n\nSuccess Response (201 Created).\n\n``` json\n{\n    \"data\": {\n        \"id\": 602,\n        \"content\": \"awesome!\",\n        \"creator\": {\n            \"id\": 7,\n            \"email\": \"simpleUser@gmail.com\"\n        },\n        \"created_at\": \"2025-10-27T13:26:39.000000Z\"\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "get all comments",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}",
								"comments"
							]
						},
						"description": "**Purpose:**  \nRetrieves all comments associated with a specific blog post. Provide the post ID as a path variable.\n\n**Example Response:**\n\nSuccess Response (200 OK).\n\n``` json\n{\n    \"data\": [\n        {\n            \"id\": 602,\n            \"content\": \"Text for comment\",\n            \"creator\": {\n                \"id\": 7,\n                \"name\": \"Vada.Turner\"\n            },\n            \"created_at\": \"2025-10-27T13:26:39.000000Z\"\n        },\n        {...},\n    ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "delete comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/comments/{{commentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"comments",
								"{{commentId}}"
							]
						},
						"description": "**Purpose:**\n\nRemoves the specified comment from the system by its ID. Provide the comment ID as a path variable. This action is irreversible. After successful delete this endpoint returns **no content (204).**"
					},
					"response": []
				}
			],
			"description": "Before starting you should set the following **variable**:\n\n- `commentContent`: The comment's body (content)."
		},
		{
			"name": "delete post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/posts/{{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				},
				"description": "**Purpose:**\n\nRemoves the specified post from the system by its ID. Provide the post ID as a path variable. This action is irreversible. After successful delete this endpoint returns **no content (204).**"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "postTitle",
			"value": ""
		},
		{
			"key": "postContent",
			"value": ""
		},
		{
			"key": "postCategoryId",
			"value": ""
		},
		{
			"key": "newPostTitle",
			"value": ""
		},
		{
			"key": "newPostContent",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userPassword",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "commentContent",
			"value": ""
		},
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": ""
		}
	]
}